import gspread
from oauth2client.service_account import ServiceAccountCredentials
import csv
import re

CLIENT_EMAIL = 'Google Docs automation-af72a95c9b76.json'
SPREADSHEET_FILE_NAME = 'Names for automation sheet'
CURRENT_CSV_FILE = 'current.csv'
IOC_CSV_FILE = 'ioc.csv'
SUPPORT_CSV_FILE = 'support.csv'


def find_in_support(ioc_dict):
    """
    Function that iterates over the ioc_dict and also read the support.csv file to find the dependencies version
    available associated to an specific IOC given in ioc_dict.
    :param ioc_dict: Dictionary of dependencies finded on the given IOC lines.
    :type ioc_dict: dict
    :return: A list with all dependencies finded in support.csv file that depend each IOC of current.csv file.
    :rtype: list
    """
    dependencies_list = []
    print(ioc_dict)
    with open(SUPPORT_CSV_FILE) as csv_file:
        csv_reader = csv.reader(csv_file)
        for line in csv_reader:
            epics = line[0]
            version = line[1]

            for key, value in ioc_dict.items():
                if key == epics and value == version:
                    print(epics, version)
                    dependencies_list.append(epics + ' ' + version)
    return dependencies_list


def find_in_ioc(dict_current_line):
    """
    Function that iterates and read the ioc.csv file to find the dependencies version associated to an specific line
    given in current.csv file. The line represent the name and version of IOC.
    :param dict_current_line: Specific line of current.csv file that represent the name and version of IOC.
    :type dict_current_line: dict
    :return: Dependencies finded in the given IOC line.
    :rtype: dict
    """
    ioc_present_dependencies = {}
    ioc = dict_current_line["IOC"]
    version = dict_current_line['version']
    with open(IOC_CSV_FILE, mode='r') as csv_file:
        csv_reader = csv.DictReader(csv_file)
        for line in csv_reader:
            if line['R3.14.12.8'] == ioc and line[' '] == version:

                for key, value in line.items():
                    if not re.search(r'^-', value):
                        ioc_present_dependencies[key] = value
    return ioc_present_dependencies


def setup_csv_file(current_file):
    """
    This function read the current.csv file and for each line search the dependencies in ioc.csv and support.csv files.
    First, with the help of def find_in_ioc() that iterates over each line of current.csv, and then with
    find_in_support() that iterates over the dependencies find in ioc.csv file.
    :param current_file: current.csv file.
    :type current_file: str
    :return: A list with all dependencies finded in support.csv file that depend each line of current.csv file.
    :rtype: list
    """
    # ioc_dependencies = {}
    # support_present_list = []
    final_list = []
    with open(current_file, mode='r') as csv_file:
        csv_reader = csv.DictReader(csv_file)

        if current_file == CURRENT_CSV_FILE:
            for line in csv_reader:

                if line['maturity'] == 'prod':
                    # print('IOC: ' + line['IOC'] + ', version:' + line['version'])
                    ioc_dependencies = find_in_ioc(line)
                    if ioc_dependencies:
                        support_present_list = find_in_support(ioc_dependencies)
                        final_list.append(support_present_list)
                else:
                    print('This is not prod maturity: ' + line['maturity'])
                    print(line)
    return final_list


def basic_configuration(cl_email, sp_sheet_file):
    """
    Function that setup the API with an specific spreadsheet file in Google Docs. As result, we have access
    to the content of the file for insert, modified or eliminated rows.
    :param cl_email: .json generated by Google Cloud Platform that contain the private key.
    :type cl_email: str
    :param sp_sheet_file: Name of the spreadsheet file.
    :type sp_sheet_file: str
    :return: The content of the spreadsheet file.
    :rtype: tuple
    """
    scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_name(cl_email, scope)
    client = gspread.authorize(creds)
    sheet = client.open(sp_sheet_file).sheet1
    content = sheet.get_all_records()
    return sheet, content


if __name__ == '__main__':

    try:
        sheet_back, content_back = basic_configuration(CLIENT_EMAIL, SPREADSHEET_FILE_NAME)
    except gspread.exceptions.SpreadsheetNotFound as e:
        # print(e)
        print('Spreadsheet NotFound: "' + SPREADSHEET_FILE_NAME + '"')
        exit(0)
    except FileNotFoundError as e:
        print(e)
        exit(0)
    try:
        for supp_available_list in setup_csv_file(CURRENT_CSV_FILE):
            print(supp_available_list)
    except FileNotFoundError as e:
        print(e)
        exit(0)

# print(content_back)
#
# new_line = ['Anakin', 'Skywalker', 'male', 'Tatooine']
# index = 3
# sheet.insert_row(new_line,index)
# sheet.delete_row(4)
